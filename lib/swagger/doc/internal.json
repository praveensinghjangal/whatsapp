{
    "swagger": "2.0",
    "info": {
        "description": "Helo Whatsapp API documentation",
        "version": "1.0.0",
        "title": "Helo Whatsapp             ",
        "termsOfService": "",
        "contact": {
            "name": "vivaconnect support",
            "email": "support@vivaconnect.co"
        }
    },
    "host": "localhost:3000",
    "basePath": "/helowhatsapp/api",
    "tags": [
        {
            "name": "message",
            "description": "API's to send bulk messages to end user"
        },
        {
            "name": "accountProfile",
            "description": "API's related to account information of registered user"
        },
        {
            "name": "businessBillingProfile",
            "description": "API's related to billing information of registered user"
        },
        {
            "name": "verification",
            "description": "email and sms verification of registered user"
        },
        {
            "name": "agreement",
            "description": "API's related to agreement for using vivaconnect helo-whatsapp platform services"
        },
        {
            "name": "users",
            "description": "API's related to login and registration"
        },
        {
            "name": "web-hooks",
            "description": "Web hook API's provided to our vendors to send incoming messages"
        },
        {
            "name": "places",
            "description": "API's related to country ,state, city details"
        },
        {
            "name": "WABA",
            "description": "API's related to whatsapp business account (WABA) information of registered user"
        },
        {
            "name": "templates",
            "description": "API's related to whatsapp templates"
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/chat/v1/messages": {
            "post": {
                "description": "This API is used to send mesages using a channel.\n This API can send single as well as bulk messsages.",
                "summary": "This API is used to send mesages using a channel",
                "tags": [
                    "message"
                ],
                "operationId": "send",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "Provided by vivaconnect upon signup"
                    },
                    {
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "description": "Accepts Array of json to send bulk message",
                        "schema": {
                            "example": [
                                {
                                    "to": "9112345",
                                    "channels": [
                                        "whatsapp"
                                    ],
                                    "whatsapp": {
                                        "from": "9167890",
                                        "contentType": "location",
                                        "location": {
                                            "longitude": 7.4954884,
                                            "latitude": 51.5005765
                                        }
                                    }
                                },
                                {
                                    "to": "9112345",
                                    "channels": [
                                        "whatsapp"
                                    ],
                                    "whatsapp": {
                                        "from": "9167890",
                                        "contentType": "template",
                                        "template": {
                                            "templateId": "welcome",
                                            "language": {
                                                "policy": "deterministic",
                                                "code": "en"
                                            },
                                            "components": [
                                                {
                                                    "type": "header",
                                                    "parameters": [
                                                        {
                                                            "type": "text",
                                                            "text": "Hi!"
                                                        },
                                                        {
                                                            "type": "media",
                                                            "media": {
                                                                "type": "document",
                                                                "url": "http://www.africau.edu/images/default/sample.pdf"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "body",
                                                    "parameters": [
                                                        {
                                                            "type": "text",
                                                            "text": "Hi!"
                                                        },
                                                        {
                                                            "type": "media",
                                                            "media": {
                                                                "type": "document",
                                                                "url": "http://www.africau.edu/images/default/sample.pdf"
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "footer",
                                                    "parameters": [
                                                        {
                                                            "type": "text",
                                                            "text": "Hi!"
                                                        },
                                                        {
                                                            "type": "media",
                                                            "media": {
                                                                "type": "document",
                                                                "url": "http://www.africau.edu/images/default/sample.pdf"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "to": "9112345",
                                    "channels": [
                                        "whatsapp"
                                    ],
                                    "whatsapp": {
                                        "from": "9167890",
                                        "contentType": "media",
                                        "media": {
                                            "type": "image",
                                            "url": "https://i.ibb.co/kXgjphY/925869358s.png",
                                            "caption": "viva connect"
                                        }
                                    }
                                },
                                {
                                    "to": "9112345",
                                    "channels": [
                                        "whatsapp"
                                    ],
                                    "whatsapp": {
                                        "from": "9167890",
                                        "contentType": "text",
                                        "text": "hello"
                                    }
                                }
                            ],
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sendrequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns message ID",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "array"
                                }
                            },
                            "example": {
                                "code": 2002,
                                "msg": "Request Accepted",
                                "data": [
                                    {
                                        "messageId": "9fcb694e-312f-4945-bc62-008b7a8b376f",
                                        "acceptedAt": "2020-07-07T08:33:32.537Z"
                                    },
                                    {
                                        "messageId": "9fcb694e-312f-4945-bc62-008b7a8bjuip",
                                        "acceptedAt": "2020-07-07T08:33:32.648Z"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns invalid request error in error array",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "array"
                                }
                            },
                            "example": {
                                "code": 4000,
                                "msg": "Invalid request",
                                "data": null,
                                "error": [
                                    "invalid body error here"
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token in header",
                        "headers": {},
                        "schema": {
                            "type": "string",
                            "example": "Unauthorized"
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/chat/v1/messages/whatsapp/excel": {
            "post": {
                "description": "API to send bulk template message using excel",
                "summary": "whatsapp excel send template message",
                "tags": [
                    "message"
                ],
                "operationId": "whatsappexcelsendmessage",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "User can obtain auth token by using login API"
                    },
                    {
                        "name": "messagefile",
                        "in": "formData",
                        "required": true,
                        "type": "file",
                        "description": "excel file with template parameters download sample file using this link https://drive.google.com/file/d/1453P-r7xcay4XEUSQPOD5BddspNKYqTK/view?usp=sharing"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns message ID",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "array"
                                }
                            },
                            "example": {
                                "code": 2002,
                                "msg": "Request Accepted",
                                "data": [
                                    {
                                        "messageId": "9fcb694e-312f-4945-bc62-008b7a8b376f",
                                        "acceptedAt": "2020-07-07T08:33:32.537Z"
                                    },
                                    {
                                        "messageId": "9fcb694e-312f-4945-bc62-008b7a8bjuip",
                                        "acceptedAt": "2020-07-07T08:33:32.648Z"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns invalid request error in error array",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "array"
                                }
                            },
                            "example": {
                                "code": 4000,
                                "msg": "Invalid request",
                                "data": null,
                                "error": [
                                    "invalid body error here"
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token in header",
                        "headers": {},
                        "schema": {
                            "type": "string",
                            "example": "Unauthorized"
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/users/account": {
            "put": {
                "description": "API is used for adding and updating user account info",
                "summary": "add and update user account details",
                "tags": [
                    "accountProfile"
                ],
                "operationId": "updateAccountInfo",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    },
                    {
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/updateAccountInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Status if account info is completed",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 2000,
                                "msg": "Success",
                                "data": {
                                    "complete": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns invalid request error in error array",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "array"
                                }
                            },
                            "example": {
                                "code": 4000,
                                "msg": "Invalid request",
                                "data": null,
                                "error": [
                                    "invalid body error here"
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token in header",
                        "headers": {},
                        "schema": {
                            "type": "string",
                            "example": "Unauthorized"
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                },
                "security": []
            },
            "get": {
                "summary": "gets account info",
                "description": "returns account info of user account and completion staus",
                "tags": [
                    "accountProfile"
                ],
                "operationId": "getAccountInfo",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns account info and its completition status",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 2000,
                                "msg": "Success",
                                "data": {
                                    "accountId": "158944412352512",
                                    "accountManagerName": "abc@gmail.com",
                                    "tokenKey": null,
                                    "email": "abc@gmail.com",
                                    "accountType": "Prepaid",
                                    "city": "6462",
                                    "state": "180",
                                    "country": "6",
                                    "addressLine1": "VIVAPLEX, PLOT NO C 7",
                                    "addressLine2": "MIDC ROAD, ANDHERI EAST",
                                    "contactNumber": "90998789999",
                                    "phoneCode": "India",
                                    "postalCode": "400093",
                                    "firstName": "abc",
                                    "lastName": "def",
                                    "complete": true
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token in header",
                        "headers": {},
                        "schema": {
                            "type": "string",
                            "example": "Unauthorized"
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/users/accountType": {
            "get": {
                "description": "APi which returns dropdown of all account type",
                "summary": "dropdown of all account type",
                "tags": [
                    "accountProfile"
                ],
                "operationId": "accountType-dropdown",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns dropdown of all account type",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "array"
                                }
                            },
                            "example": {
                                "code": 2000,
                                "msg": "Success",
                                "data": [
                                    {
                                        "user_account_type_id": "d9718ee1-50a1-4826-b0fa-ad1394308d59",
                                        "type_name": "Prepaid"
                                    },
                                    {
                                        "user_account_type_id": "eb004696-bcad-4998-adbb-d25fbbd3ad68",
                                        "type_name": "Postpaid"
                                    },
                                    {
                                        "user_account_type_id": "570af199-5b7c-4e7f-bc9f-e298d65b6273",
                                        "type_name": "Semi Postpaid"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token in header",
                        "headers": {},
                        "schema": {
                            "type": "string",
                            "example": "Unauthorized"
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/users/billing": {
            "post": {
                "summary": "add or update billing details",
                "description": "add or update billing details",
                "tags": [
                    "businessBillingProfile"
                ],
                "operationId": "addBillingData",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    },
                    {
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "description": "API Request Body",
                        "schema": {
                            "$ref": "#/definitions/addBillingDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Status if billing info is completed",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 2000,
                                "msg": "Success",
                                "data": {
                                    "complete": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns invalid request error in error array",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "array"
                                }
                            },
                            "example": {
                                "code": 4000,
                                "msg": "Invalid request",
                                "data": null,
                                "error": [
                                    "invalid body error here"
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token in header",
                        "headers": {},
                        "schema": {
                            "type": "string",
                            "example": "Unauthorized"
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                },
                "security": []
            },
            "get": {
                "summary": "get billing details",
                "description": "gets billing details",
                "tags": [
                    "businessBillingProfile"
                ],
                "operationId": "getBillingData",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns billing info and its completition status",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 2000,
                                "msg": "Success",
                                "data": {
                                    "billingName": "Helo-Whatsapp",
                                    "city": "Mumbai",
                                    "state": "Maharashtra",
                                    "country": "IN",
                                    "addressLine1": "Test1",
                                    "addressLine2": "Test2",
                                    "contactNumber": "1234567890",
                                    "phoneCode": "+91",
                                    "postalCode": "400001",
                                    "panCard": "ABCDE1234F",
                                    "gstOrTaxNo": "ABCDE1234F",
                                    "planActivated": "Free",
                                    "accoutCreatedOn": "03/06/2020",
                                    "complete": true
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token in header",
                        "headers": {},
                        "schema": {
                            "type": "string",
                            "example": "Unauthorized"
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/users/verification/email": {
            "post": {
                "summary": "API to send verification code by email",
                "description": "API to send verification code by email",
                "tags": [
                    "verification"
                ],
                "operationId": "sendVerificationCodeByEmail",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success or already verified response",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                }
                            },
                            "example": [
                                {
                                    "code": 2001,
                                    "msg": "Please check your registered email for verification code",
                                    "data": {}
                                },
                                {
                                    "code": 3015,
                                    "msg": "Email already verified for user",
                                    "data": null,
                                    "error": {}
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Invalid token in header",
                        "headers": {},
                        "schema": {
                            "type": "string",
                            "example": "Unauthorized"
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                },
                "security": []
            },
            "patch": {
                "summary": "validate code sent on email",
                "description": "validate email code sent on registered email",
                "tags": [
                    "verification"
                ],
                "operationId": "validateEmailCode",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    },
                    {
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/validateEmailCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "verification success message",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 2003,
                                "msg": "Email address verified",
                                "data": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Returns invalid request error in error array",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "array"
                                }
                            },
                            "example": {
                                "code": 4000,
                                "msg": "Invalid request",
                                "data": null,
                                "error": [
                                    "invalid body error here"
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token in header",
                        "headers": {},
                        "schema": {
                            "example": [
                                "Unauthorized",
                                {
                                    "code": 3017,
                                    "msg": "Invalid verification code",
                                    "data": null,
                                    "error": {}
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/users/verification/sms": {
            "post": {
                "summary": "API to send verification code by sms",
                "description": "API to send verification code by sms",
                "tags": [
                    "verification"
                ],
                "operationId": "sendVerificationCodeBySms",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success or already verified response",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                }
                            },
                            "example": [
                                {
                                    "code": 2001,
                                    "msg": "Please check your registered phone number for verification code",
                                    "data": {}
                                },
                                {
                                    "code": 3016,
                                    "msg": "Phone number already verified for user",
                                    "data": null,
                                    "error": {}
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Invalid token in header",
                        "headers": {},
                        "schema": {
                            "type": "string",
                            "example": "Unauthorized"
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                },
                "security": []
            },
            "patch": {
                "summary": "validate code sent on phone number",
                "description": "validate code sent on registered phone number",
                "tags": [
                    "verification"
                ],
                "operationId": "validateSmsCode",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    },
                    {
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/validateSmsCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "verification success message",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 2003,
                                "msg": "Phone number verified",
                                "data": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Returns invalid request error in error array",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "array"
                                }
                            },
                            "example": {
                                "code": 4000,
                                "msg": "Invalid request",
                                "data": null,
                                "error": [
                                    "invalid body error here"
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token in header",
                        "headers": {},
                        "schema": {
                            "example": [
                                "Unauthorized",
                                {
                                    "code": 3017,
                                    "msg": "Invalid verification code",
                                    "data": null,
                                    "error": {}
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/users/agreement": {
            "post": {
                "summary": "upload signed agreement",
                "description": "upload signed agreement",
                "tags": [
                    "agreement"
                ],
                "operationId": "uploadagreement",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    },
                    {
                        "name": "agreement",
                        "in": "formData",
                        "required": true,
                        "type": "file",
                        "description": "Agreement in Pdf format. (download unsigned agreement using GET /user/agreement/generate API)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "verification success message",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 2000,
                                "msg": "Success",
                                "data": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Returns invalid request error in error array",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "array"
                                }
                            },
                            "example": [
                                {
                                    "code": 4000,
                                    "msg": "Invalid request",
                                    "data": null,
                                    "error": [
                                        "invalid body error here"
                                    ]
                                },
                                {
                                    "code": 4030,
                                    "msg": "Please provide a file",
                                    "data": {}
                                },
                                {
                                    "code": 4031,
                                    "msg": "Invalid file type",
                                    "data": {},
                                    "error": "File upload only supports the following filetypes - /pdf/"
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Invalid token in header",
                        "headers": {},
                        "schema": {
                            "type": "string",
                            "example": "Unauthorized"
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                },
                "security": []
            },
            "get": {
                "summary": "download signed agreement",
                "description": "Download signed agreement\nLatest uploaded document wil be download",
                "tags": [
                    "agreement"
                ],
                "operationId": "downloadsignedagreement",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A pdf file will be downloaded",
                        "schema": {
                            "type": "file",
                            "format": "pdf"
                        }
                    },
                    "401": {
                        "description": "Invalid token in header",
                        "headers": {},
                        "schema": {
                            "type": "string",
                            "example": "Unauthorized"
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/users/agreement/generate": {
            "get": {
                "summary": "generate agreement",
                "tags": [
                    "agreement"
                ],
                "operationId": "generateagreement",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A pdf file will be downloaded",
                        "schema": {
                            "type": "file",
                            "format": "pdf"
                        }
                    },
                    "401": {
                        "description": "Invalid token in header",
                        "headers": {},
                        "schema": {
                            "type": "string",
                            "example": "Unauthorized"
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/users/auth/login": {
            "post": {
                "summary": "login API",
                "description": "Login API for logging in and using another API's",
                "tags": [
                    "users"
                ],
                "operationId": "auth/login",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth~1loginrequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns auth token if credentials provided are correct",
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 2000,
                                "msg": "Success",
                                "data": {
                                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7InVzZXJfaWQiOiIxNTg5ODg2ODA4MTQ5MTIifSwiaWF0IjoxNTk0MTI4NDQ5LCJleHAiOjE1OTQyMTQ4NDl9.A-1L6NxxayZi6Poxo7a3neNVjNjBXsHGiVBlmaol2eU",
                                    "emailVerifiedStatus": true,
                                    "phoneVerifiedStatus": true,
                                    "tncAccepted": true,
                                    "role": "cc-agent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns invalid request error in error array",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "array"
                                }
                            },
                            "example": {
                                "code": 4000,
                                "msg": "Invalid request",
                                "data": null,
                                "error": [
                                    "invalid body error here"
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token in header",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 4001,
                                "msg": "Unauthorized access.",
                                "data": null
                            }
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                }
            }
        },
        "/users/signUp": {
            "post": {
                "summary": "sign up / create account",
                "description": "API to sign up / create account with viva connect helo-whatsapp",
                "tags": [
                    "users"
                ],
                "operationId": "signUp",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "description": "JSON Input",
                        "schema": {
                            "$ref": "#/definitions/signUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns userId if user is created",
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                }
                            },
                            "example": [
                                {
                                    "code": 2000,
                                    "msg": "Success",
                                    "data": {
                                        "userId": "e3157044-7cc4-4bc1-b510-ba63a3eb65d1"
                                    }
                                },
                                {
                                    "code": 3008,
                                    "msg": "user already exists.",
                                    "data": null
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Returns invalid request error in error array",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "array"
                                }
                            },
                            "example": {
                                "code": 4000,
                                "msg": "Invalid request",
                                "data": null,
                                "error": [
                                    "invalid body error here"
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                }
            }
        },
        "/tyntec/queue/incomingdata/e464e894-0ded-4122-86bc-4e215f9f8f5a": {
            "post": {
                "summary": "Web hook API for tytntec",
                "description": "Web hook API for tytntec to receive incoming messages and store in queue",
                "tags": [
                    "web-hooks"
                ],
                "operationId": "sinch/sendDataToQueue",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "description": "",
                        "schema": {
                            "type": "object",
                            "example": {
                                "key": "accepts any json input and pushes to queue"
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepts input object and sends to queue",
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 2002,
                                "msg": "Request Accepted",
                                "data": null
                            }
                        }
                    },
                    "500": {
                        "description": "in case of some exceptional error",
                        "headers": {},
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "msg": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "object"
                                },
                                "error": {
                                    "type": "object"
                                }
                            },
                            "example": {
                                "code": 5000,
                                "msg": "Something went wrong. Please try again later.",
                                "data": {},
                                "error": {}
                            }
                        }
                    }
                }
            }
        },
        "/places/states/22/cities": {
            "get": {
                "description": "This API will return list of cities based on state ID passed in\nreq url",
                "summary": "get cities by state ID",
                "tags": [
                    "places"
                ],
                "operationId": "getcitiesbystateID",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        },
        "/places/countries/101/states": {
            "get": {
                "description": "This API returns list of states based on country id passed in request\nurl",
                "summary": "Get states list by country ID",
                "tags": [
                    "places"
                ],
                "operationId": "GetstateslistbycountryID",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        },
        "/places/countries": {
            "get": {
                "description": "This API returns list of countries",
                "summary": "get countries list",
                "tags": [
                    "places"
                ],
                "operationId": "getcountrieslist",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        },
        "/business/categories": {
            "get": {
                "description": "Getss dropdown of business category",
                "summary": "business categories",
                "tags": [
                    "WABA"
                ],
                "operationId": "businesscategories",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        },
        "/business/profile": {
            "get": {
                "description": "Gets business profile data",
                "summary": "get business profile",
                "tags": [
                    "WABA"
                ],
                "operationId": "getbusinessprofile",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            },
            "post": {
                "description": "This api adds or updates business profile of waba",
                "summary": "add / update business profile",
                "tags": [
                    "WABA"
                ],
                "operationId": "add/updatebusinessprofile",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    },
                    {
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/add~1updatebusinessprofilerequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        },
        "/business/profile/accessInformation": {
            "post": {
                "description": "this api is used to add and update business access info",
                "summary": "add update business profilr access Information",
                "tags": [
                    "WABA"
                ],
                "operationId": "addupdatebusinessprofilraccessInformation",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": ""
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    },
                    {
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/addupdatebusinessprofilraccessInformationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        },
        "/business/profile/markManagerVerified": {
            "post": {
                "summary": "mark manager verified",
                "tags": [
                    "WABA"
                ],
                "operationId": "markmanagerverified",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    },
                    {
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/markmanagerverifiedrequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        },
        "/business/verification/phoneNumber": {
            "post": {
                "description": "send verification code to verify waba number by sms or voice channel",
                "summary": "send verification code for business number",
                "tags": [
                    "WABA"
                ],
                "operationId": "sendverificationcodeforbusinessnumber",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "verificationChannel",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "description": ""
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": ""
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            },
            "patch": {
                "description": "API to verify otp sent to user for business number verififcation",
                "summary": "verifiy code for business number",
                "tags": [
                    "WABA"
                ],
                "operationId": "verifiycodeforbusinessnumber",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": ""
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    },
                    {
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/verifiycodeforbusinessnumberrequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        },
        "/templates": {
            "get": {
                "description": "this api returns list of templates based on filters",
                "summary": "Get template list",
                "tags": [
                    "templates"
                ],
                "operationId": "Gettemplatelist",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            },
            "post": {
                "description": "API to add and update template\nto add template do not pass templateID to update template pass template ID along with parameters to update",
                "summary": "Add update template",
                "tags": [
                    "templates"
                ],
                "operationId": "Addupdatetemplate",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    },
                    {
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AddupdatetemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        },
        "/templates/mt03": {
            "get": {
                "summary": "Get template Info",
                "tags": [
                    "templates"
                ],
                "operationId": "GettemplateInfo",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        },
        "/templates/languages": {
            "get": {
                "description": "API for language dropdown",
                "summary": "template languages dropdown",
                "tags": [
                    "templates"
                ],
                "operationId": "templatelanguagesdropdown",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        },
        "/templates/types": {
            "get": {
                "summary": "template types dropdown",
                "tags": [
                    "templates"
                ],
                "operationId": "templatetypesdropdown",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        },
        "/templates/categories": {
            "get": {
                "summary": "templates categories dropdown",
                "tags": [
                    "templates"
                ],
                "operationId": "templatescategoriesdropdown",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        },
        "/templates/sample": {
            "get": {
                "description": "accepts template name search and status id search\nremove the query param to get all templates",
                "summary": "get sample templates",
                "tags": [
                    "templates"
                ],
                "operationId": "getsampletemplates",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "templateName",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "description": ""
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        },
        "/templates/sample/1be3ae85-a3a6-4684-b575-114ed787a468": {
            "get": {
                "description": "get info od a sample template",
                "summary": "get sample templates info",
                "tags": [
                    "templates"
                ],
                "operationId": "getsampletemplatesinfo",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        },
        "/templates/buttonType": {
            "get": {
                "summary": "get buttonType",
                "tags": [
                    "templates"
                ],
                "operationId": "getbuttonType",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        },
        "/templates/headerType": {
            "get": {
                "summary": "get header Type",
                "tags": [
                    "templates"
                ],
                "operationId": "getheaderType",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "user can obtain auth token by using login API"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "security": []
            }
        }
    },
    "definitions": {
        "sendrequest": {
            "title": "sendrequest",
            "example": {
                "to": "919860245659",
                "channels": [
                    "whatsapp"
                ],
                "whatsapp": {
                    "from": "918080800808",
                    "contentType": "template",
                    "template": {
                        "templateId": "opt_1",
                        "language": {
                            "policy": "deterministic",
                            "code": "hi"
                        },
                        "components": [
                            {
                                "type": "body",
                                "parameters": [
                                    {
                                        "type": "text",
                                        "text": "VivaConnect"
                                    },
                                    {
                                        "type": "text",
                                        "text": "007"
                                    },
                                    {
                                        "type": "text",
                                        "text": "2022"
                                    }
                                ]
                            }
                        ]
                    }
                }
            },
            "type": "object",
            "properties": {
                "to": {
                    "type": "string"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "whatsapp": {
                    "$ref": "#/definitions/Whatsapp"
                }
            },
            "required": [
                "to",
                "channels",
                "whatsapp"
            ]
        },
        "Whatsapp": {
            "title": "Whatsapp",
            "example": {
                "from": "918080800808",
                "contentType": "template",
                "template": {
                    "templateId": "opt_1",
                    "language": {
                        "policy": "deterministic",
                        "code": "hi"
                    },
                    "components": [
                        {
                            "type": "body",
                            "parameters": [
                                {
                                    "type": "text",
                                    "text": "VivaConnect"
                                },
                                {
                                    "type": "text",
                                    "text": "007"
                                },
                                {
                                    "type": "text",
                                    "text": "2022"
                                }
                            ]
                        }
                    ]
                }
            },
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "template": {
                    "$ref": "#/definitions/Template"
                }
            },
            "required": [
                "from",
                "contentType",
                "template"
            ]
        },
        "Template": {
            "title": "Template",
            "example": {
                "templateId": "opt_1",
                "language": {
                    "policy": "deterministic",
                    "code": "hi"
                },
                "components": [
                    {
                        "type": "body",
                        "parameters": [
                            {
                                "type": "text",
                                "text": "VivaConnect"
                            },
                            {
                                "type": "text",
                                "text": "007"
                            },
                            {
                                "type": "text",
                                "text": "2022"
                            }
                        ]
                    }
                ]
            },
            "type": "object",
            "properties": {
                "templateId": {
                    "type": "string"
                },
                "language": {
                    "$ref": "#/definitions/Language"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Component"
                    }
                }
            },
            "required": [
                "templateId",
                "language",
                "components"
            ]
        },
        "Language": {
            "title": "Language",
            "example": {
                "policy": "deterministic",
                "code": "hi"
            },
            "type": "object",
            "properties": {
                "policy": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            },
            "required": [
                "policy",
                "code"
            ]
        },
        "Component": {
            "title": "Component",
            "example": {
                "type": "body",
                "parameters": [
                    {
                        "type": "text",
                        "text": "VivaConnect"
                    },
                    {
                        "type": "text",
                        "text": "007"
                    },
                    {
                        "type": "text",
                        "text": "2022"
                    }
                ]
            },
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Parameter"
                    }
                }
            },
            "required": [
                "type",
                "parameters"
            ]
        },
        "Parameter": {
            "title": "Parameter",
            "example": {
                "type": "text",
                "text": "VivaConnect"
            },
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            },
            "required": [
                "type",
                "text"
            ]
        },
        "updateAccountInfoRequest": {
            "title": "updateAccountInfoRequest",
            "example": {
                "firstName": "user",
                "lastName": "viva",
                "city": "Mumbai",
                "state": "Maharashtra",
                "country": "IN",
                "addressLine1": "some street",
                "addressLine2": "some lane",
                "contactNumber": "1234567890",
                "phoneCode": "+91",
                "postalCode": "400001"
            },
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "addressLine1": {
                    "type": "string"
                },
                "addressLine2": {
                    "type": "string"
                },
                "contactNumber": {
                    "type": "string"
                },
                "phoneCode": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                }
            }
        },
        "addBillingDataRequest": {
            "title": "addBillingDataRequest",
            "example": {
                "city": "Mumbai",
                "state": "Maharashtra",
                "country": "IN",
                "addressLine1": "Test 1",
                "addressLine2": "Test 2",
                "contactNumber": "1234567890",
                "phoneCode": "+91",
                "postalCode": "400001",
                "gstOrTaxNo": "ABCDE1234F",
                "businessName": "Helo-Whatsapp",
                "panCard": "ABCDE1234F"
            },
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "addressLine1": {
                    "type": "string"
                },
                "addressLine2": {
                    "type": "string"
                },
                "contactNumber": {
                    "type": "string"
                },
                "phoneCode": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "gstOrTaxNo": {
                    "type": "string"
                },
                "businessName": {
                    "type": "string"
                },
                "panCard": {
                    "type": "string"
                }
            }
        },
        "validateEmailCodeRequest": {
            "title": "validateEmailCodeRequest",
            "example": {
                "code": 1234
            },
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "required": [
                "code"
            ]
        },
        "validateSmsCodeRequest": {
            "title": "validateSmsCodeRequest",
            "example": {
                "code": 3167
            },
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "required": [
                "code"
            ]
        },
        "auth/loginrequest": {
            "title": "auth/loginrequest",
            "example": {
                "email": "user@gmail.com",
                "password": "123oneTwo#"
            },
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "required": [
                "email",
                "password"
            ]
        },
        "signUpRequest": {
            "title": "signUpRequest",
            "example": {
                "email": "usertwo@gmail.com",
                "password": "123oneTw@3",
                "tncAccepted": true
            },
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "tncAccepted": {
                    "type": "boolean"
                }
            },
            "required": [
                "email",
                "password",
                "tncAccepted"
            ]
        },
        "sinch/sendDataToQueueRequest": {
            "title": "sinch/sendDataToQueueRequest",
            "example": {
                "type": "whatsapp",
                "contacts": [
                    {
                        "profile": {
                            "name": "John Smith"
                        },
                        "wa_id": "0732001122"
                    }
                ],
                "notifications": [
                    {
                        "from": "0732001122",
                        "to": "sinchbot",
                        "message_id": "01DPNXZ0WCF9XD19MH84XD0P62",
                        "message": {
                            "type": "text",
                            "body": "Hello bot I want to know something!"
                        }
                    }
                ]
            },
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Notification"
                    }
                }
            },
            "required": [
                "type",
                "contacts",
                "notifications"
            ]
        },
        "Contact": {
            "title": "Contact",
            "example": {
                "profile": {
                    "name": "John Smith"
                },
                "wa_id": "0732001122"
            },
            "type": "object",
            "properties": {
                "profile": {
                    "$ref": "#/definitions/Profile"
                },
                "wa_id": {
                    "type": "string"
                }
            },
            "required": [
                "profile",
                "wa_id"
            ]
        },
        "Profile": {
            "title": "Profile",
            "example": {
                "name": "John Smith"
            },
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ]
        },
        "Notification": {
            "title": "Notification",
            "example": {
                "from": "0732001122",
                "to": "sinchbot",
                "message_id": "01DPNXZ0WCF9XD19MH84XD0P62",
                "message": {
                    "type": "text",
                    "body": "Hello bot I want to know something!"
                }
            },
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "message": {
                    "$ref": "#/definitions/Message"
                }
            },
            "required": [
                "from",
                "to",
                "message_id",
                "message"
            ]
        },
        "Message": {
            "title": "Message",
            "example": {
                "type": "text",
                "body": "Hello bot I want to know something!"
            },
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                }
            },
            "required": [
                "type",
                "body"
            ]
        },
        "add/updatebusinessprofilerequest": {
            "title": "add/updatebusinessprofilerequest",
            "example": {
                "businessName": "Danny business updated",
                "whatsappStatus": "available up-date",
                "description": "available 24/7",
                "address": "a",
                "country": "IN",
                "city": "mumbai",
                "state": "maharashtra",
                "postalCode": "400009",
                "email": "a@b.com",
                "businessCategoryId": "bda36704-cde5-41c9-b039-e3841fa9229f",
                "profilePhotoUrl": "www.google.comaaaaaaaaaaaaaaaaaaa"
            },
            "type": "object",
            "properties": {
                "businessName": {
                    "type": "string"
                },
                "whatsappStatus": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "businessCategoryId": {
                    "type": "string"
                },
                "profilePhotoUrl": {
                    "type": "string"
                }
            },
            "required": [
                "businessName",
                "whatsappStatus",
                "description",
                "address",
                "country",
                "city",
                "state",
                "postalCode",
                "email",
                "businessCategoryId",
                "profilePhotoUrl"
            ]
        },
        "addupdatebusinessprofilraccessInformationRequest": {
            "title": "addupdatebusinessprofilraccessInformationRequest",
            "example": {
                "facebookManagerId": "asfsf",
                "phoneCode": "+91",
                "phoneNumber": "123456",
                "canReceiveSms": true,
                "canReceiveVoiceCall": false,
                "associatedWithIvr": false
            },
            "type": "object",
            "properties": {
                "facebookManagerId": {
                    "type": "string"
                },
                "phoneCode": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "canReceiveSms": {
                    "type": "boolean"
                },
                "canReceiveVoiceCall": {
                    "type": "boolean"
                },
                "associatedWithIvr": {
                    "type": "boolean"
                }
            },
            "required": [
                "facebookManagerId",
                "phoneCode",
                "phoneNumber",
                "canReceiveSms",
                "canReceiveVoiceCall",
                "associatedWithIvr"
            ]
        },
        "markmanagerverifiedrequest": {
            "title": "markmanagerverifiedrequest",
            "example": {
                "businessManagerVerified": true
            },
            "type": "object",
            "properties": {
                "businessManagerVerified": {
                    "type": "boolean"
                }
            },
            "required": [
                "businessManagerVerified"
            ]
        },
        "verifiycodeforbusinessnumberrequest": {
            "title": "verifiycodeforbusinessnumberrequest",
            "example": {
                "code": 5976
            },
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "required": [
                "code"
            ]
        },
        "AddupdatetemplateRequest": {
            "title": "AddupdatetemplateRequest",
            "example": {
                "messageTemplateId": "9bf57a21-a05c-47f4-82df-9da15c03deb9",
                "templateName": "3rd template",
                "type": "media message templAte",
                "messageTemplateCategoryId": "b8203a31-e439-4ea4-a270-bd211317d3ff",
                "messageTemplateStatusId": "c71a8387-80e0-468b-9ee3-abb5ec328176",
                "messageTemplateLanguageId": "57aa7635-5717-4397-8eb6-4799ef3bec05",
                "bodyText": "wassup bro",
                "headerText": "ssup",
                "footerText": "foot",
                "mediaType": "pdf",
                "secondLanguageRequired": false,
                "secondMessageTemplateLanguageId": "cde192b7-c60f-4d2d-8573-dd5af7c9379b",
                "secondlanguageBodyText": "hii",
                "headerType": "Video",
                "buttonType": "Quick Reply",
                "buttonData": {
                    "quickReply": [
                        "1",
                        "2",
                        "3"
                    ],
                    "phoneButtonText": "call us",
                    "phoneNumber": "9876543210",
                    "websiteButtontext": "oursite.com",
                    "webAddress": "www.google.com"
                }
            },
            "type": "object",
            "properties": {
                "messageTemplateId": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "messageTemplateCategoryId": {
                    "type": "string"
                },
                "messageTemplateStatusId": {
                    "type": "string"
                },
                "messageTemplateLanguageId": {
                    "type": "string"
                },
                "bodyText": {
                    "type": "string"
                },
                "headerText": {
                    "type": "string"
                },
                "footerText": {
                    "type": "string"
                },
                "mediaType": {
                    "type": "string"
                },
                "secondLanguageRequired": {
                    "type": "boolean"
                },
                "secondMessageTemplateLanguageId": {
                    "type": "string"
                },
                "secondlanguageBodyText": {
                    "type": "string"
                },
                "headerType": {
                    "type": "string"
                },
                "buttonType": {
                    "type": "string"
                },
                "buttonData": {
                    "$ref": "#/definitions/ButtonData"
                }
            },
            "required": [
                "messageTemplateId",
                "templateName",
                "type",
                "messageTemplateCategoryId",
                "messageTemplateStatusId",
                "messageTemplateLanguageId",
                "bodyText",
                "headerText",
                "footerText",
                "mediaType",
                "secondLanguageRequired",
                "secondMessageTemplateLanguageId",
                "secondlanguageBodyText",
                "headerType",
                "buttonType",
                "buttonData"
            ]
        },
        "ButtonData": {
            "title": "ButtonData",
            "example": {
                "quickReply": [
                    "1",
                    "2",
                    "3"
                ],
                "phoneButtonText": "call us",
                "phoneNumber": "9876543210",
                "websiteButtontext": "oursite.com",
                "webAddress": "www.google.com"
            },
            "type": "object",
            "properties": {
                "quickReply": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "phoneButtonText": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "websiteButtontext": {
                    "type": "string"
                },
                "webAddress": {
                    "type": "string"
                }
            },
            "required": [
                "quickReply",
                "phoneButtonText",
                "phoneNumber",
                "websiteButtontext",
                "webAddress"
            ]
        }
    }
}